version: '3.3'

services:
    postgres:
        image: postgres:11.0
        container_name: postgres
        restart: always
        ports:
        - '5432:5432'
        environment:
          POSTGRES_USER: ${POSTGRES_USER:-postgres}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-example}
          POSTGRES_DB: db
          # POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-"trust"}

    flask:
        container_name: flask
        restart: always
        depends_on: 
          - postgres
        environment:
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-example}
        build:
            context: ./backend/
            dockerfile: Dockerfile
        command: ["./explorer_app/scripts/wait-for-postgres.sh", "postgres", "./explorer_app/scripts/entrypoint.sh"]
        expose:
            - "5000"
        ports:
            - "5000:5000"
        volumes:
            - ./backend/:/app
        
    
    react: 
        container_name: react
        restart: always
        build:
            context: ./frontend/
            dockerfile: Dockerfile
        expose:
            - "3000"
        ports:
            - "3000:3000"
        stdin_open: true
        volumes:
            - ./frontend:/usr/src/app
